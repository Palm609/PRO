{"ast":null,"code":"/**\r\n * Popup class is used to display information over chart area.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport popupCSS from \"./PopupCSS\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { BaseObjectEvents } from \"../Base\";\nimport { getInteraction } from \"../interaction/Interaction\";\nimport { keyboard } from \"../utils/Keyboard\";\nimport { MultiDisposer } from \"../utils/Disposer\";\nimport { getShadowRoot } from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $object from \"../utils/Object\";\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\n\nvar Popup =\n/** @class */\nfunction (_super) {\n  __extends(Popup, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Popup() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n\n\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds references to various HTML elements, Popup consists of.\r\n     */\n\n    _this._elements = {};\n    /**\r\n     * Holdes Interaction objects for various Popup's elements.\r\n     */\n\n    _this._IOs = {};\n    /**\r\n     * Contents of popup window.\r\n     */\n\n    _this._content = \"\";\n    /**\r\n     * Title of the popup window.\r\n     */\n\n    _this._title = \"\";\n    /**\r\n     * Prefix to apply to class names for popup elements.\r\n     */\n\n    _this._classPrefix = \"ampopup\";\n    /**\r\n     * If set to `true` [[Popup]] will use default styles.\r\n     */\n\n    _this._defaultStyles = true;\n    /**\r\n     * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n     * showing a semi-transparent fill. (curtain)\r\n     */\n\n    _this._showCurtain = false;\n    /**\r\n     * Indicates whether popup can be dragged.\r\n     */\n\n    _this._draggable = true;\n    /**\r\n     * Horizontal position of the content window.\r\n     */\n\n    _this._align = \"center\";\n    /**\r\n     * Resize popup as images are being loaded.\r\n     */\n\n    _this._dynamicResize = true;\n    /**\r\n     * Vertical position of the content window.\r\n     */\n\n    _this._verticalAlign = \"middle\";\n    /**\r\n     * Shift in position of the element. (used for dragging)\r\n     */\n\n    _this._shift = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * Temporary shift in position of the element. (used for dragging)\r\n     */\n\n    _this._tempShift = {\n      x: 0,\n      y: 0\n    };\n    /**\r\n     * A title for screen readers. It is very highly recommended to set that title\r\n     * so that people using screen reader tools can get an immediate summary of\r\n     * the information in the popup.\r\n     */\n\n    _this._readerTitle = \"\";\n    /**\r\n     * Is popup closable?\r\n     */\n\n    _this._closable = true;\n    /**\r\n     * Was CSS already loaded?\r\n     */\n\n    _this._cssLoaded = false;\n    /**\r\n     * If set to other than \"none\" will try to re-adjust the position of the\r\n     * popop to fit within chart container or browser window.\r\n     *\r\n     * @ignore Feature not yet implemented\r\n     * @todo Implement\r\n     */\n\n    _this._fitTo = \"window\";\n    /**\r\n     * Identifies if this object is a \"template\" and should not be treated as\r\n     * real object that is drawn or actually used in the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n\n    _this.isTemplate = false;\n    /**\r\n     * Indicates if the element was already sized and should not be measured for\r\n     * size again, saving some precious resources.\r\n     */\n\n    _this._sized = false;\n    _this.className = \"Popup\";\n    return _this;\n  }\n  /**\r\n   * Shows popup window.\r\n   */\n\n\n  Popup.prototype.open = function () {\n    if (this.container) {\n      if (this._elements.wrapper) {\n        this.container.appendChild(this._elements.wrapper);\n      }\n\n      if (this._elements.curtain) {\n        this.container.appendChild(this._elements.curtain);\n        this.showCurtain = this.showCurtain;\n      }\n\n      this.positionElement();\n      this.dispatchImmediately(\"opened\");\n    }\n  };\n  /**\r\n   * Hides popup window.\r\n   */\n\n\n  Popup.prototype.close = function () {\n    if (this._elements.wrapper) {\n      if (this._elements.wrapper.parentElement) {\n        this._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\n      }\n    }\n\n    if (this._elements.curtain) {\n      if (this._elements.curtain.parentElement) {\n        this._elements.curtain.parentElement.removeChild(this._elements.curtain);\n      }\n    }\n\n    this.dispatchImmediately(\"closed\");\n    this.releasePointers();\n  };\n  /**\r\n   * Destroy (dispose) popup.\r\n   */\n\n\n  Popup.prototype.dispose = function () {\n    this.close();\n\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Positions content element in the center of popup based on its actual size.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Popup.prototype.positionElement = function (forceResize) {\n    var _this = this;\n\n    if (forceResize === void 0) {\n      forceResize = true;\n    }\n\n    if (!this._elements.wrapper) {\n      return;\n    }\n\n    setTimeout(function () {\n      if (!_this._elements.wrapper) {\n        return;\n      }\n\n      if (forceResize || !_this._sized) {\n        _this._elements.wrapper.style.opacity = \"0.01\";\n        _this._elements.wrapper.style.left = \"0\";\n        _this._elements.wrapper.style.top = \"0\";\n        _this._elements.wrapper.style.margin = \"0 0 0 0\";\n        _this._elements.wrapper.style.width = \"\";\n        _this._elements.wrapper.style.height = \"\";\n\n        var bbox = _this._elements.wrapper.getBoundingClientRect();\n\n        _this._elements.wrapper.style.width = bbox.width + \"px\";\n        _this._elements.wrapper.style.height = bbox.height + \"px\";\n        _this._sized = true;\n      } // Check for any images that are not yet loaded\n\n\n      if (_this.dynamicResize) {\n        var images = _this._elements.wrapper.getElementsByTagName(\"img\");\n\n        for (var i = 0; i < images.length; i++) {\n          var image = images[i];\n\n          if (!image.complete) {\n            // Resize popup once again when image is loaded\n            image.addEventListener(\"load\", function () {\n              _this.positionElement(true);\n            }); // Do this for one image only as it will be checked again next time\n            // anyway\n\n            break;\n          }\n        }\n      }\n\n      setTimeout(function () {\n        if (!_this._elements.wrapper) {\n          return;\n        }\n\n        var bbox;\n\n        if ((forceResize || !_this._sized) && _this._bbox) {\n          bbox = _this._bbox;\n        } else {\n          bbox = _this._elements.wrapper.getBoundingClientRect();\n          _this._elements.wrapper.style.opacity = \"\";\n        } // Set horizontal positioning\n\n\n        switch (_this.align) {\n          case \"left\":\n            _this._elements.wrapper.style.left = \"0\";\n            _this._elements.wrapper.style.right = \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n\n          case \"center\":\n            _this._elements.wrapper.style.left = \"50%\";\n            _this._elements.wrapper.style.right = \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(Math.round(-bbox.width / 2) + (_this._shift.x + _this._tempShift.x));\n            break;\n\n          case \"right\":\n            _this._elements.wrapper.style.left = \"auto\";\n            _this._elements.wrapper.style.right = \"0\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n\n          default:\n            _this._elements.wrapper.style.left = _this.toStyle(_this.left) || \"auto\";\n            _this._elements.wrapper.style.right = _this.toStyle(_this.right) || \"auto\";\n            _this._elements.wrapper.style.marginLeft = _this.toStyle(_this._shift.x + _this._tempShift.x);\n            break;\n        } // Set vertical positioning\n\n\n        switch (_this.verticalAlign) {\n          case \"top\":\n            _this._elements.wrapper.style.top = \"0\";\n            _this._elements.wrapper.style.bottom = \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n\n          case \"middle\":\n            _this._elements.wrapper.style.top = \"50%\";\n            _this._elements.wrapper.style.bottom = \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(Math.round(-bbox.height / 2) + (_this._shift.y + _this._tempShift.y));\n            break;\n\n          case \"bottom\":\n            _this._elements.wrapper.style.top = \"auto\";\n            _this._elements.wrapper.style.bottom = \"0\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n\n          default:\n            _this._elements.wrapper.style.top = _this.toStyle(_this.top) || \"auto\";\n            _this._elements.wrapper.style.bottom = _this.toStyle(_this.bottom) || \"auto\";\n            _this._elements.wrapper.style.marginTop = _this.toStyle(_this._shift.y + _this._tempShift.y);\n            break;\n        }\n      }, 1);\n    }, 1);\n  };\n\n  Popup.prototype.setupDragging = function () {\n    var _this = this;\n\n    if (this.draggable) {\n      if (!this._IOs.header.events.has(\"drag\")) {\n        this._IOs.header.events.on(\"drag\", function (ev) {\n          _this._tempShift.x = ev.shift.x;\n          _this._tempShift.y = ev.shift.y;\n\n          _this.positionElement(false);\n        });\n      }\n\n      if (!this._IOs.header.events.has(\"dragstop\")) {\n        this._IOs.header.events.on(\"dragstop\", function (ev) {\n          _this._shift.x += _this._tempShift.x;\n          _this._shift.y += _this._tempShift.y;\n          _this._tempShift.x = 0;\n          _this._tempShift.y = 0;\n\n          _this.positionElement(false);\n        });\n      }\n    } else {\n      if (this._IOs.header) {\n        getInteraction().unprepElement(this._IOs.header);\n\n        if (this._IOs.header.events.has(\"drag\")) {\n          this._IOs.header.events.off(\"drag\");\n        }\n\n        if (this._IOs.header.events.has(\"dragstop\")) {\n          this._IOs.header.events.off(\"dragstop\");\n        }\n      }\n    }\n  };\n\n  Popup.prototype.toStyle = function (value) {\n    if (!$type.hasValue(value)) {\n      return null;\n    } else if ($type.isNumber(value)) {\n      return \"\" + value + \"px\";\n    } else {\n      return value.toString();\n    }\n  };\n\n  Object.defineProperty(Popup.prototype, \"classPrefix\", {\n    /**\r\n     * A prefix that is applied to class names of various popup elements.\r\n     *\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"classPrefix\", this._classPrefix);\n    },\n\n    /**\r\n     * @param value Class name prefix\r\n     */\n    set: function (value) {\n      this._classPrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"classPrefixRaw\", {\n    /**\r\n     * Returns raw prefix (without adapters applied).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this._classPrefix;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"content\", {\n    /**\r\n     * @return Popup content\r\n     */\n    get: function () {\n      return this.adapter.apply(\"content\", this._content);\n    },\n\n    /**\r\n     * Popup content.\r\n     *\r\n     * Popup content can be any valid HTML, including CSS.\r\n     *\r\n     * @param value Popup content\r\n     */\n    set: function (value) {\n      if (this._content != value) {\n        this._content = value;\n\n        if (!this._elements.content) {\n          this.createContentElement();\n        }\n\n        this._elements.content.innerHTML = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Popup.prototype.getClassNames = function () {\n    return this.adapter.apply(\"classNames\", {\n      wrapperClass: this.classPrefix + \"\",\n      headerClass: this.classPrefix + \"-header\",\n      titleClass: this.classPrefix + \"-title\",\n      contentClass: this.classPrefix + \"-content\",\n      insideClass: this.classPrefix + \"-inside\",\n      curtainClass: this.classPrefix + \"-curtain\",\n      closeClass: this.classPrefix + \"-close\"\n    });\n  };\n  /**\r\n   * Creates content element.\r\n   */\n\n\n  Popup.prototype.createContentElement = function () {\n    // Check if it's created already\n    if (this._elements.wrapper) {\n      return;\n    } // Get class names for popup elements\n\n\n    var classNames = this.getClassNames(); // Create content element\n\n    var wrapper = document.createElement(\"div\");\n    wrapper.className = classNames.contentClass;\n    wrapper.style.opacity = \"0.01\"; // Create close button\n\n    var close = document.createElement(\"a\");\n    close.className = classNames.closeClass; // header title\n\n    var header = document.createElement(\"div\");\n    header.className = classNames.headerClass; // Content title\n\n    var title = document.createElement(\"div\");\n    title.innerHTML = this.title;\n    title.className = classNames.titleClass;\n\n    if (!this.title) {\n      title.style.display = \"none\";\n    } // Content div\n\n\n    var content = document.createElement(\"div\");\n    content.className = classNames.insideClass;\n    content.innerHTML = this.content; // Set up events for content\n\n    this._IOs.wrapper = getInteraction().getInteraction(wrapper);\n    this._IOs.header = getInteraction().getInteraction(header);\n\n    this._disposers.push(this._IOs.wrapper); // Set hover/out events\n\n\n    this._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\n\n    this._IOs.wrapper.events.on(\"out\", this.releasePointers, this); // Create an InteractionObject for close\n\n\n    this._IOs.close = getInteraction().getInteraction(close);\n\n    this._disposers.push(this._IOs.close); // Hide close for now\n\n\n    close.style.visibility = \"hidden\"; // Add accessible stuff\n\n    wrapper.setAttribute(\"role\", \"dialog\"); // Add to wrapper\n\n    header.appendChild(close);\n    header.appendChild(title);\n    wrapper.appendChild(header);\n    wrapper.appendChild(content);\n    this.container.appendChild(wrapper); // Save for later access\n\n    this._elements.wrapper = wrapper;\n    this._elements.header = header;\n    this._elements.content = content;\n    this._elements.title = title;\n    this._elements.close = close; // Load CSS\n\n    if (this.defaultStyles) {\n      this.loadDefaultCSS();\n    } // Create curtain as well\n\n\n    this.createCurtainElement(); // Apply events\n\n    this.applyEvents();\n    this.applyReaderSettings(); // Draggable?\n\n    this.setupDragging();\n  };\n\n  Object.defineProperty(Popup.prototype, \"title\", {\n    /**\r\n     * @return Popup title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", this._title);\n    },\n\n    /**\r\n     * Popup title.\r\n     *\r\n     * Popup title can be any valid HTML, including CSS.\r\n     *\r\n     * @param value  Popup title\r\n     */\n    set: function (value) {\n      if (this._title != value) {\n        this._title = value;\n\n        if (!this._elements.content) {\n          this.createContentElement();\n        }\n\n        this._elements.title.innerHTML = value;\n        this.positionElement();\n        this.applyReaderSettings();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"readerTitle\", {\n    /**\r\n     * @return Popup content\r\n     */\n    get: function () {\n      return this.adapter.apply(\"readerTitle\", this._readerTitle != \"\" ? this._readerTitle : this.title);\n    },\n\n    /**\r\n     * A title for screen readers. It is very highly recommended to set that title\r\n     * so that people using screen reader tools can get an immediate summary of\r\n     * the information in the popup.\r\n     *\r\n     * @param value  Reader title\r\n     */\n    set: function (value) {\n      if (this._readerTitle != value) {\n        this._readerTitle = value;\n        this.applyReaderSettings();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"closable\", {\n    /**\r\n     * @return Closable?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"closable\", this._closable);\n    },\n\n    /**\r\n     * Is popup closable?\r\n     *\r\n     * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n     * clicking curtain, or clicking the close button.\r\n     *\r\n     * If it is not closable, the only way to close it is via `close()` call.\r\n     *\r\n     * @param value Closable?\r\n     */\n    set: function (value) {\n      if (value !== this._closable) {\n        this._closable = value;\n        this.applyEvents();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"fitTo\", {\n    /**\r\n     * @ignore\r\n     * @todo Implement\r\n     * @return Fit option\r\n     */\n    get: function () {\n      return this.adapter.apply(\"fitTo\", this._fitTo);\n    },\n\n    /**\r\n     * If set to other than \"none\" will try to re-adjust the position of the\r\n     * popop to fit within chart container or browser window.\r\n     *\r\n     * @ignore\r\n     * @todo Implement\r\n     * @default \"window\"\r\n     * @param value  Fit option\r\n     */\n    set: function (value) {\n      if (value != this._fitTo) {\n        this._fitTo = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"defaultStyles\", {\n    /**\r\n     * @return Use default CSS?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultStyles\", this._defaultStyles);\n    },\n\n    /**\r\n     * Should popup use default CSS?\r\n     *\r\n     * If default CSS is disabled, an external CSS should handle the look of the\r\n     * popup, since it will look quite out of place otherwise.\r\n     *\r\n     * @default true\r\n     * @param Use default CSS?\r\n     */\n    set: function (value) {\n      if (this._defaultStyles != value) {\n        this._defaultStyles = value;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"showCurtain\", {\n    /**\r\n     * @return Show curtain?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"showCurtain\", this._showCurtain);\n    },\n\n    /**\r\n     * Should popup use dim out all content behind it?\r\n     *\r\n     * @default false\r\n     * @param Show curtain?\r\n     */\n    set: function (value) {\n      if (this._showCurtain != value) {\n        this._showCurtain = value;\n\n        if (this._elements.curtain) {\n          this._elements.curtain.style.display = value ? \"block\" : \"none\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates curtain element.\r\n   */\n\n  Popup.prototype.createCurtainElement = function () {\n    // Get class names for popup elements\n    var classNames = this.getClassNames(); // Create the curtain\n\n    var curtain = document.createElement(\"div\");\n    curtain.className = classNames.curtainClass; // Append curtain to wrapper\n\n    this.container.appendChild(curtain); // Create an InteractionObject for curtain because we might need to\n    // set interactions on it\n\n    this._IOs.curtain = getInteraction().getInteraction(curtain); // Add Curtain IO to disposers\n\n    this._disposers.push(this._IOs.curtain); // Set events to disable underlying interactivity\n\n\n    this._IOs.curtain.events.on(\"over\", this.disablePointers, this);\n\n    this._IOs.curtain.events.on(\"out\", this.releasePointers, this); // Hide it?\n\n\n    curtain.style.display = this.showCurtain ? \"block\" : \"none\"; // Save for later\n\n    this._elements.curtain = curtain;\n  };\n\n  Object.defineProperty(Popup.prototype, \"draggable\", {\n    /**\r\n     * @return Show curtain?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"draggable\", this._draggable);\n    },\n\n    /**\r\n     * Can the popup be dragged with a pointer?\r\n     *\r\n     * @default false\r\n     * @param Show curtain?\r\n     */\n    set: function (value) {\n      if (this._draggable != value) {\n        this._draggable = value;\n        this.setupDragging();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"dynamicResize\", {\n    /**\r\n     * @return Resize dynamically?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dynamicResize\", this._dynamicResize);\n    },\n\n    /**\r\n     * Resize popup as images are being loaded.\r\n     *\r\n     * @default true\r\n     * @since 4.9.17\r\n     * @param Resize dynamically?\r\n     */\n    set: function (value) {\n      if (this._dynamicResize != value) {\n        this._dynamicResize = value;\n        this.positionElement(true);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"align\", {\n    /**\r\n     * @return Horizontal position\r\n     */\n    get: function () {\n      return this.adapter.apply(\"align\", this._align);\n    },\n\n    /**\r\n     * Horizontal positioning of the content window.\r\n     *\r\n     * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n     *\r\n     * @default \"center\"\r\n     * @param Horizontal position\r\n     */\n    set: function (value) {\n      if (this._align != value) {\n        this._align = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"verticalAlign\", {\n    /**\r\n     * @return Vertical position\r\n     */\n    get: function () {\n      return this.adapter.apply(\"verticalAlign\", this._verticalAlign);\n    },\n\n    /**\r\n     * Vertical positioning of the content window.\r\n     *\r\n     * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n     *\r\n     * @default \"middle\"\r\n     * @param Vertical position\r\n     */\n    set: function (value) {\n      if (this._verticalAlign != value) {\n        this._verticalAlign = value;\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"left\", {\n    /**\r\n     * @return Left\r\n     */\n    get: function () {\n      return this.adapter.apply(\"left\", this._left);\n    },\n\n    /**\r\n     * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `align` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Left\r\n     */\n    set: function (value) {\n      if (this.left != value) {\n        this._left = value;\n        this._align = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"right\", {\n    /**\r\n     * @return Right\r\n     */\n    get: function () {\n      return this.adapter.apply(\"right\", this._right);\n    },\n\n    /**\r\n     * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `align` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Right\r\n     */\n    set: function (value) {\n      if (this.right != value) {\n        this._right = value;\n        this._align = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"top\", {\n    /**\r\n     * @return Top\r\n     */\n    get: function () {\n      return this.adapter.apply(\"top\", this._top);\n    },\n\n    /**\r\n     * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `verticalAlign` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Top\r\n     */\n    set: function (value) {\n      if (this.top != value) {\n        this._top = value;\n        this._verticalAlign = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"bottom\", {\n    /**\r\n     * @return Bottom\r\n     */\n    get: function () {\n      return this.adapter.apply(\"bottom\", this._bottom);\n    },\n\n    /**\r\n     * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n     *\r\n     * Can be either absolute pixel value, or relative (`Percent`).\r\n     *\r\n     * Setting this property will automatically set `verticalAlign` to \"none\".\r\n     *\r\n     * NOTE: The position is relative to the chart container.\r\n     *\r\n     * @param Bottom\r\n     */\n    set: function (value) {\n      if (this.bottom != value) {\n        this._bottom = value;\n        this._verticalAlign = \"none\";\n        this.positionElement();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Popup.prototype, \"elements\", {\n    /**\r\n     * Returns an object with references to various elements of the Popup.\r\n     *\r\n     * * `wrapper`\r\n     * * `title`\r\n     * * `content`\r\n     * * `close`\r\n     * * `curtain`\r\n     */\n    get: function () {\n      return this._elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads popup CSS.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Popup.prototype.loadDefaultCSS = function () {\n    if (!this._cssLoaded) {\n      this._disposers.push(popupCSS(getShadowRoot(this.container), this.classPrefix));\n\n      $object.each(this._elements, function (key, el) {\n        el.style.display = \"\";\n      });\n      this._cssLoaded = true;\n    }\n  };\n  /**\r\n   * If popup is closable, this method adds various events to popup elements.\r\n   */\n\n\n  Popup.prototype.applyEvents = function () {\n    var _this = this;\n\n    if (this._IOs.close) {\n      if (this.closable) {\n        this._IOs.close.element.style.visibility = \"visible\";\n        var disposers = [getInteraction().body.events.on(\"keyup\", function (ev) {\n          if (keyboard.isKey(ev.event, \"esc\") && _this.closable) {\n            _this.close();\n          }\n        }), this._IOs.close.events.on(\"hit\", function (ev) {\n          _this.close();\n        })];\n        disposers.push(this._IOs.curtain.events.on(\"hit\", function (ev) {\n          if (_this.showCurtain && _this.closable) {\n            _this.close();\n          }\n        }));\n\n        this._disposers.push(new MultiDisposer(disposers));\n      } else {\n        this._IOs.close.element.style.visibility = \"hidden\";\n      }\n    }\n  };\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n\n\n  Popup.prototype.disablePointers = function () {\n    if (this.sprite) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n      this.sprite.interactionsEnabled = false;\n    }\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n\n\n  Popup.prototype.releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled)) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n      this._spriteInteractionsEnabled = undefined;\n    }\n  };\n  /**\r\n   * Sets screen reader related settings.\r\n   */\n\n\n  Popup.prototype.applyReaderSettings = function () {\n    this.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\n  };\n  /**\r\n   * Copies all properties and related data from different element.\r\n   *\r\n   * @param object Source element\r\n   */\n\n\n  Popup.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.container = source.container;\n    this.sprite = source.sprite;\n    this.classPrefix = source.classPrefixRaw;\n    this.content = source.content;\n    this.title = source.title;\n    this.readerTitle = source.readerTitle;\n    this.defaultStyles = source.defaultStyles;\n    this.showCurtain = source.showCurtain;\n    this.align = source.align;\n    this.verticalAlign = source.verticalAlign;\n    this.left = source.left;\n    this.right = source.right;\n    this.top = source.top;\n    this.bottom = source.bottom;\n    this.adapter.copyFrom(source.adapter);\n  };\n\n  return Popup;\n}(BaseObjectEvents);\n\nexport { Popup };","map":{"version":3,"sources":["../../../../../src/.internal/core/elements/Popup.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * Popup class is used to display information over chart area.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport popupCSS from \"./PopupCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { InteractionObject } from \"../interaction/InteractionObject\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { MultiDisposer } from \"../utils/Disposer\";\r\nimport { Align } from \"../defs/Align\";\r\nimport { VerticalAlign } from \"../defs/VerticalAlign\";\r\nimport { IPoint } from \"../defs/IPoint\";\r\nimport { Optional } from \"../utils/Type\";\r\nimport { getShadowRoot } from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $object from \"../utils/Object\";\r\n\r\n/**\r\n * Represents a list of available adapters for Export.\r\n */\r\nexport interface IPopupAdapters {\r\n\r\n\t/**\r\n\t * Applied to the class prefixes.\r\n\t */\r\n\tclassPrefix: string,\r\n\r\n\t/**\r\n\t * Applied to popup content before it is shown.\r\n\t */\r\n\tcontent: string,\r\n\r\n\t/**\r\n\t * Applied to popup title before it is shown.\r\n\t */\r\n\ttitle: string,\r\n\r\n\t/**\r\n\t * Applied to the screen reader title.\r\n\t */\r\n\treaderTitle: string,\r\n\r\n\t/**\r\n\t * Applied to default `defaultStyles` property before it is retrieved.\r\n\t */\r\n\tdefaultStyles: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `showCurtain` property before it is retrieved.\r\n\t */\r\n\tshowCurtain: boolean,\r\n\r\n\t/**\r\n\t * Applied to default `draggable` property before it is retrieved.\r\n\t */\r\n\tdraggable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `closable` property before it is retrieved.\r\n\t */\r\n\tclosable: boolean,\r\n\r\n\t/**\r\n\t * Applied to `dynamicResize` property before it is retrieved.\r\n\t */\r\n\tdynamicResize: boolean,\r\n\r\n\t/**\r\n\t * Applied to `fitTo` property before it's retrieved.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t */\r\n\tfitTo: \"none\" | \"container\" | \"window\",\r\n\r\n\t/**\r\n\t * Applied to horizontal alignment of the popup.\r\n\t */\r\n\talign: Optional<Align>;\r\n\r\n\t/**\r\n\t * Applied to vertical alignment of the popup.\r\n\t */\r\n\tverticalAlign: Optional<VerticalAlign>;\r\n\r\n\t/**\r\n\t * Applied to `left` position value.\r\n\t */\r\n\tleft: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `right` position value.\r\n\t */\r\n\tright: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `top` position value.\r\n\t */\r\n\ttop: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to `bottom` position value.\r\n\t */\r\n\tbottom: number | Percent;\r\n\r\n\t/**\r\n\t * Applied to class names list that are added as class for various popup\r\n\t * elements.\r\n\t */\r\n\tclassNames: {\r\n\t\twrapperClass: string,\r\n\t\ttitleClass: string,\r\n\t\theaderClass: string,\r\n\t\tcontentClass: string,\r\n\t\tinsideClass: string,\r\n\t\tcurtainClass: string,\r\n\t\tcloseClass: string\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Defines events for Popup.\r\n */\r\nexport interface IPopupEvents {\r\n\r\n\t/**\r\n\t * Invoked when Popup is opened.\r\n\t */\r\n\topened: {};\r\n\r\n\t/**\r\n\t * Invoked when Popup is closed.\r\n\t */\r\n\tclosed: {};\r\n\r\n}\r\n\r\n/**\r\n * Shows an HTML popup which covers window or a chart area.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/popups-and-modals/} For examples and docs on Popups and Modals.\r\n * @todo Positioning over whole window\r\n */\r\nexport class Popup extends BaseObjectEvents {\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IPopupEvents;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IPopupAdapters;\r\n\r\n\t/**\r\n\t * Adapter.\r\n\t */\r\n\tpublic adapter: Adapter<Popup, IPopupAdapters> = new Adapter<Popup, IPopupAdapters>(this);\r\n\r\n\t/**\r\n\t * A reference to an HTML element to be used for container. If not set, popup\r\n\t * will cover the whole window.\r\n\t */\r\n\tpublic container: $type.Optional<HTMLElement | Document>;\r\n\r\n\t/**\r\n\t * A parent element this Popup belongs to.\r\n\t */\r\n\tpublic sprite: $type.Optional<Sprite>;\r\n\r\n\t/**\r\n\t * Holds references to various HTML elements, Popup consists of.\r\n\t */\r\n\tprotected _elements: {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\theader?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Holdes Interaction objects for various Popup's elements.\r\n\t */\r\n\tprotected _IOs: {\r\n\t\twrapper?: InteractionObject;\r\n\t\tcontent?: InteractionObject;\r\n\t\theader?: InteractionObject;\r\n\t\tclose?: InteractionObject;\r\n\t\tcurtain?: InteractionObject;\r\n\t} = {};\r\n\r\n\t/**\r\n\t * Contents of popup window.\r\n\t */\r\n\tprotected _content: string = \"\";\r\n\r\n\t/**\r\n\t * Title of the popup window.\r\n\t */\r\n\tprotected _title: string = \"\";\r\n\r\n\t/**\r\n\t * Prefix to apply to class names for popup elements.\r\n\t */\r\n\tprotected _classPrefix: string = \"ampopup\"\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will use default styles.\r\n\t */\r\n\tprotected _defaultStyles: boolean = true;\r\n\r\n\t/**\r\n\t * If set to `true` [[Popup]] will dim out all chart content behind it by\r\n\t * showing a semi-transparent fill. (curtain)\r\n\t */\r\n\tprotected _showCurtain: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates whether popup can be dragged.\r\n\t */\r\n\tprotected _draggable: boolean = true;\r\n\r\n\t/**\r\n\t * Horizontal position of the content window.\r\n\t */\r\n\tprotected _align: Optional<Align> = \"center\";\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t */\r\n\tprotected _dynamicResize: boolean = true;\r\n\r\n\t/**\r\n\t * Vertical position of the content window.\r\n\t */\r\n\tprotected _verticalAlign: Optional<VerticalAlign> = \"middle\";\r\n\r\n\t/**\r\n\t * Shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _shift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * Temporary shift in position of the element. (used for dragging)\r\n\t */\r\n\tprotected _tempShift: IPoint = {\r\n\t\tx: 0,\r\n\t\ty: 0\r\n\t};\r\n\r\n\t/**\r\n\t * \"left\" position of the popup content.\r\n\t */\r\n\tprotected _left: number | Percent;\r\n\r\n\t/**\r\n\t * \"right\" position of the popup content.\r\n\t */\r\n\tprotected _right: number | Percent;\r\n\r\n\t/**\r\n\t * \"top\" position of the popup content.\r\n\t */\r\n\tprotected _top: number | Percent;\r\n\r\n\t/**\r\n\t * \"bottom\" position of the popup content.\r\n\t */\r\n\tprotected _bottom: number | Percent;\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t */\r\n\tpublic _readerTitle: string = \"\";\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t */\r\n\tprivate _closable: boolean = true;\r\n\r\n\t/**\r\n\t * Was CSS already loaded?\r\n\t */\r\n\tprivate _cssLoaded: boolean = false;\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore Feature not yet implemented\r\n\t * @todo Implement\r\n\t */\r\n\tprivate _fitTo: \"none\" | \"container\" | \"window\" = \"window\";\r\n\r\n\t/**\r\n\t * Used to log original value of `interactionsEnabled` so that it can be restored\r\n\t * after temporarily disabling it.\r\n\t */\r\n\tprivate _spriteInteractionsEnabled: $type.Optional<boolean>;\r\n\r\n\t/**\r\n\t * Identifies if this object is a \"template\" and should not be treated as\r\n\t * real object that is drawn or actually used in the chart.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic isTemplate: boolean = false;\r\n\r\n\t/**\r\n\t * Indicates if the element was already sized and should not be measured for\r\n\t * size again, saving some precious resources.\r\n\t */\r\n\tprivate _sized: boolean = false;\r\n\r\n\t/**\r\n\t * Cached bounding rectangle info.\r\n\t */\r\n\tprivate _bbox: $type.Optional<DOMRect | ClientRect>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"Popup\";\r\n\t}\r\n\r\n\t/**\r\n\t * Shows popup window.\r\n\t */\r\n\tpublic open(): void {\r\n\t\tif (this.container) {\r\n\t\t\tif (this._elements.wrapper) {\r\n\t\t\t\tthis.container.appendChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis.container.appendChild(this._elements.curtain);\r\n\t\t\t\tthis.showCurtain = this.showCurtain;\r\n\t\t\t}\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.dispatchImmediately(\"opened\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Hides popup window.\r\n\t */\r\n\tpublic close(): void {\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\tif (this._elements.wrapper.parentElement) {\r\n\t\t\t\tthis._elements.wrapper.parentElement.removeChild(this._elements.wrapper);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._elements.curtain) {\r\n\t\t\tif (this._elements.curtain.parentElement) {\r\n\t\t\t\tthis._elements.curtain.parentElement.removeChild(this._elements.curtain);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.dispatchImmediately(\"closed\");\r\n\t\tthis.releasePointers();\r\n\t}\r\n\r\n\t/**\r\n\t * Destroy (dispose) popup.\r\n\t */\r\n\tpublic dispose(): void {\r\n\t\tthis.close();\r\n\t\tsuper.dispose();\r\n\t}\r\n\r\n\t/**\r\n\t * Positions content element in the center of popup based on its actual size.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic positionElement(forceResize: boolean = true): void {\r\n\r\n\t\tif (!this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (forceResize || !this._sized) {\r\n\t\t\t\tthis._elements.wrapper.style.opacity = \"0.01\";\r\n\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\tthis._elements.wrapper.style.margin = \"0 0 0 0\";\r\n\r\n\t\t\t\tthis._elements.wrapper.style.width = \"\";\r\n\t\t\t\tthis._elements.wrapper.style.height = \"\";\r\n\r\n\t\t\t\tlet bbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\tthis._elements.wrapper.style.width = bbox.width + \"px\";\r\n\t\t\t\tthis._elements.wrapper.style.height = bbox.height + \"px\";\r\n\r\n\t\t\t\tthis._sized = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for any images that are not yet loaded\r\n\t\t\tif (this.dynamicResize) {\r\n\t\t\t\tconst images = this._elements.wrapper.getElementsByTagName(\"img\");\r\n\t\t\t\tfor (let i = 0; i < images.length; i++) {\r\n\t\t\t\t\tconst image = images[i];\r\n\t\t\t\t\tif (!image.complete) {\r\n\t\t\t\t\t\t// Resize popup once again when image is loaded\r\n\t\t\t\t\t\timage.addEventListener(\"load\", () => {\r\n\t\t\t\t\t\t\tthis.positionElement(true);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t// Do this for one image only as it will be checked again next time\r\n\t\t\t\t\t\t// anyway\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tif (!this._elements.wrapper) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet bbox: DOMRect | ClientRect;\r\n\t\t\t\tif ((forceResize || !this._sized) && this._bbox) {\r\n\t\t\t\t\tbbox = this._bbox;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tbbox = this._elements.wrapper.getBoundingClientRect();\r\n\t\t\t\t\tthis._elements.wrapper.style.opacity = \"\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set horizontal positioning\r\n\t\t\t\tswitch (this.align) {\r\n\t\t\t\t\tcase \"left\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"center\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(Math.round(-bbox.width / 2) + (this._shift.x + this._tempShift.x));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"right\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.left = this.toStyle(this.left) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.right = this.toStyle(this.right) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginLeft = this.toStyle(this._shift.x + this._tempShift.x);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set vertical positioning\r\n\t\t\t\tswitch (this.verticalAlign) {\r\n\t\t\t\t\tcase \"top\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"middle\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"50%\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(Math.round(-bbox.height / 2) + (this._shift.y + this._tempShift.y));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"bottom\":\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = \"0\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthis._elements.wrapper.style.top = this.toStyle(this.top) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.bottom = this.toStyle(this.bottom) || \"auto\";\r\n\t\t\t\t\t\tthis._elements.wrapper.style.marginTop = this.toStyle(this._shift.y + this._tempShift.y);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}, 1);\r\n\t\t}, 1);\r\n\r\n\t}\r\n\r\n\tprotected setupDragging(): void {\r\n\t\tif (this.draggable) {\r\n\t\t\tif (!this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"drag\", (ev) => {\r\n\t\t\t\t\tthis._tempShift.x = ev.shift.x;\r\n\t\t\t\t\tthis._tempShift.y = ev.shift.y;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (!this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\tthis._IOs.header.events.on(\"dragstop\", (ev) => {\r\n\t\t\t\t\tthis._shift.x += this._tempShift.x;\r\n\t\t\t\t\tthis._shift.y += this._tempShift.y;\r\n\t\t\t\t\tthis._tempShift.x = 0;\r\n\t\t\t\t\tthis._tempShift.y = 0;\r\n\t\t\t\t\tthis.positionElement(false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (this._IOs.header) {\r\n\t\t\t\tgetInteraction().unprepElement(this._IOs.header);\r\n\t\t\t\tif (this._IOs.header.events.has(\"drag\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"drag\");\r\n\t\t\t\t}\r\n\t\t\t\tif (this._IOs.header.events.has(\"dragstop\")) {\r\n\t\t\t\t\tthis._IOs.header.events.off(\"dragstop\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected toStyle(value: number | Percent): string | null {\r\n\t\tif (!$type.hasValue(value)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\telse if ($type.isNumber(value)) {\r\n\t\t\treturn \"\" + value + \"px\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn value.toString();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A prefix that is applied to class names of various popup elements.\r\n\t *\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefix(): string {\r\n\t\treturn this.adapter.apply(\"classPrefix\", this._classPrefix);\r\n\t}\r\n\r\n\t/**\r\n\t * @param value Class name prefix\r\n\t */\r\n\tpublic set classPrefix(value: string) {\r\n\t\tthis._classPrefix = value;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns raw prefix (without adapters applied).\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @return Class name prefix\r\n\t */\r\n\tpublic get classPrefixRaw(): string {\r\n\t\treturn this._classPrefix;\r\n\t}\r\n\r\n\t/**\r\n\t * Popup content.\r\n\t *\r\n\t * Popup content can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value Popup content\r\n\t */\r\n\tpublic set content(value: string) {\r\n\t\tif (this._content != value) {\r\n\t\t\tthis._content = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.content.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get content(): string {\r\n\t\treturn this.adapter.apply(\"content\", this._content);\r\n\t}\r\n\r\n\tprotected getClassNames() {\r\n\t\treturn this.adapter.apply(\"classNames\", {\r\n\t\t\twrapperClass: this.classPrefix + \"\",\r\n\t\t\theaderClass: this.classPrefix + \"-header\",\r\n\t\t\ttitleClass: this.classPrefix + \"-title\",\r\n\t\t\tcontentClass: this.classPrefix + \"-content\",\r\n\t\t\tinsideClass: this.classPrefix + \"-inside\",\r\n\t\t\tcurtainClass: this.classPrefix + \"-curtain\",\r\n\t\t\tcloseClass: this.classPrefix + \"-close\"\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates content element.\r\n\t */\r\n\tprotected createContentElement(): void {\r\n\r\n\t\t// Check if it's created already\r\n\t\tif (this._elements.wrapper) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create content element\r\n\t\tlet wrapper = document.createElement(\"div\");\r\n\t\twrapper.className = classNames.contentClass;\r\n\t\twrapper.style.opacity = \"0.01\";\r\n\r\n\t\t// Create close button\r\n\t\tlet close = document.createElement(\"a\");\r\n\t\tclose.className = classNames.closeClass;\r\n\r\n\t\t// header title\r\n\t\tconst header = document.createElement(\"div\");\r\n\t\theader.className = classNames.headerClass;\r\n\r\n\t\t// Content title\r\n\t\tlet title = document.createElement(\"div\");\r\n\t\ttitle.innerHTML = this.title;\r\n\t\ttitle.className = classNames.titleClass;\r\n\t\tif (!this.title) {\r\n\t\t\ttitle.style.display = \"none\";\r\n\t\t}\r\n\r\n\t\t// Content div\r\n\t\tlet content = document.createElement(\"div\");\r\n\t\tcontent.className = classNames.insideClass;\r\n\t\tcontent.innerHTML = this.content;\r\n\r\n\t\t// Set up events for content\r\n\t\tthis._IOs.wrapper = getInteraction().getInteraction(wrapper);\r\n\t\tthis._IOs.header = getInteraction().getInteraction(header);\r\n\t\tthis._disposers.push(this._IOs.wrapper);\r\n\r\n\t\t// Set hover/out events\r\n\t\tthis._IOs.wrapper.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.wrapper.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Create an InteractionObject for close\r\n\t\tthis._IOs.close = getInteraction().getInteraction(close);\r\n\t\tthis._disposers.push(this._IOs.close);\r\n\r\n\t\t// Hide close for now\r\n\t\tclose.style.visibility = \"hidden\";\r\n\r\n\t\t// Add accessible stuff\r\n\t\twrapper.setAttribute(\"role\", \"dialog\");\r\n\r\n\t\t// Add to wrapper\r\n\t\theader.appendChild(close);\r\n\t\theader.appendChild(title);\r\n\t\twrapper.appendChild(header);\r\n\t\twrapper.appendChild(content);\r\n\t\tthis.container.appendChild(wrapper);\r\n\r\n\t\t// Save for later access\r\n\t\tthis._elements.wrapper = wrapper;\r\n\t\tthis._elements.header = header;\r\n\t\tthis._elements.content = content;\r\n\t\tthis._elements.title = title;\r\n\t\tthis._elements.close = close;\r\n\r\n\t\t// Load CSS\r\n\t\tif (this.defaultStyles) {\r\n\t\t\tthis.loadDefaultCSS();\r\n\t\t}\r\n\r\n\t\t// Create curtain as well\r\n\t\tthis.createCurtainElement();\r\n\r\n\t\t// Apply events\r\n\t\tthis.applyEvents();\r\n\r\n\t\tthis.applyReaderSettings();\r\n\r\n\t\t// Draggable?\r\n\t\tthis.setupDragging();\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Popup title.\r\n\t *\r\n\t * Popup title can be any valid HTML, including CSS.\r\n\t *\r\n\t * @param value  Popup title\r\n\t */\r\n\tpublic set title(value: string) {\r\n\t\tif (this._title != value) {\r\n\t\t\tthis._title = value;\r\n\t\t\tif (!this._elements.content) {\r\n\t\t\t\tthis.createContentElement();\r\n\t\t\t}\r\n\t\t\tthis._elements.title.innerHTML = value;\r\n\t\t\tthis.positionElement();\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup title\r\n\t */\r\n\tpublic get title(): string {\r\n\t\treturn this.adapter.apply(\"title\", this._title);\r\n\t}\r\n\r\n\t/**\r\n\t * A title for screen readers. It is very highly recommended to set that title\r\n\t * so that people using screen reader tools can get an immediate summary of\r\n\t * the information in the popup.\r\n\t *\r\n\t * @param value  Reader title\r\n\t */\r\n\tpublic set readerTitle(value: string) {\r\n\t\tif (this._readerTitle != value) {\r\n\t\t\tthis._readerTitle = value;\r\n\t\t\tthis.applyReaderSettings();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Popup content\r\n\t */\r\n\tpublic get readerTitle(): string {\r\n\t\treturn this.adapter.apply(\r\n\t\t\t\"readerTitle\",\r\n\t\t\tthis._readerTitle != \"\" ? this._readerTitle : this.title\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Is popup closable?\r\n\t *\r\n\t * If it is, it can be closed in a number of ways, e.g. by hitting ESC key,\r\n\t * clicking curtain, or clicking the close button.\r\n\t *\r\n\t * If it is not closable, the only way to close it is via `close()` call.\r\n\t *\r\n\t * @param value Closable?\r\n\t */\r\n\tpublic set closable(value: boolean) {\r\n\t\tif (value !== this._closable) {\r\n\t\t\tthis._closable = value;\r\n\t\t\tthis.applyEvents();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Closable?\r\n\t */\r\n\tpublic get closable(): boolean {\r\n\t\treturn this.adapter.apply(\"closable\", this._closable);\r\n\t}\r\n\r\n\t/**\r\n\t * If set to other than \"none\" will try to re-adjust the position of the\r\n\t * popop to fit within chart container or browser window.\r\n\t *\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @default \"window\"\r\n\t * @param value  Fit option\r\n\t */\r\n\tpublic set fitTo(value: \"none\" | \"container\" | \"window\") {\r\n\t\tif (value != this._fitTo) {\r\n\t\t\tthis._fitTo = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo Implement\r\n\t * @return Fit option\r\n\t */\r\n\tpublic get fitTo(): \"none\" | \"container\" | \"window\" {\r\n\t\treturn this.adapter.apply(\"fitTo\", this._fitTo);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use default CSS?\r\n\t *\r\n\t * If default CSS is disabled, an external CSS should handle the look of the\r\n\t * popup, since it will look quite out of place otherwise.\r\n\t *\r\n\t * @default true\r\n\t * @param Use default CSS?\r\n\t */\r\n\tpublic set defaultStyles(value: boolean) {\r\n\t\tif (this._defaultStyles != value) {\r\n\t\t\tthis._defaultStyles = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Use default CSS?\r\n\t */\r\n\tpublic get defaultStyles(): boolean {\r\n\t\treturn this.adapter.apply(\"defaultStyles\", this._defaultStyles);\r\n\t}\r\n\r\n\t/**\r\n\t * Should popup use dim out all content behind it?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set showCurtain(value: boolean) {\r\n\t\tif (this._showCurtain != value) {\r\n\t\t\tthis._showCurtain = value;\r\n\t\t\tif (this._elements.curtain) {\r\n\t\t\t\tthis._elements.curtain.style.display = value ? \"block\" : \"none\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get showCurtain(): boolean {\r\n\t\treturn this.adapter.apply(\"showCurtain\", this._showCurtain);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates curtain element.\r\n\t */\r\n\tprotected createCurtainElement(): void {\r\n\r\n\t\t// Get class names for popup elements\r\n\t\tlet classNames = this.getClassNames();\r\n\r\n\t\t// Create the curtain\r\n\t\tlet curtain = document.createElement(\"div\");\r\n\t\tcurtain.className = classNames.curtainClass;\r\n\r\n\t\t// Append curtain to wrapper\r\n\t\tthis.container.appendChild(curtain);\r\n\r\n\t\t// Create an InteractionObject for curtain because we might need to\r\n\t\t// set interactions on it\r\n\t\tthis._IOs.curtain = getInteraction().getInteraction(curtain);\r\n\r\n\t\t// Add Curtain IO to disposers\r\n\t\tthis._disposers.push(this._IOs.curtain);\r\n\r\n\t\t// Set events to disable underlying interactivity\r\n\t\tthis._IOs.curtain.events.on(\"over\", this.disablePointers, this);\r\n\t\tthis._IOs.curtain.events.on(\"out\", this.releasePointers, this);\r\n\r\n\t\t// Hide it?\r\n\t\tcurtain.style.display = this.showCurtain ? \"block\" : \"none\";\r\n\r\n\t\t// Save for later\r\n\t\tthis._elements.curtain = curtain;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Can the popup be dragged with a pointer?\r\n\t *\r\n\t * @default false\r\n\t * @param Show curtain?\r\n\t */\r\n\tpublic set draggable(value: boolean) {\r\n\t\tif (this._draggable != value) {\r\n\t\t\tthis._draggable = value;\r\n\t\t\tthis.setupDragging();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Show curtain?\r\n\t */\r\n\tpublic get draggable(): boolean {\r\n\t\treturn this.adapter.apply(\"draggable\", this._draggable);\r\n\t}\r\n\r\n\t/**\r\n\t * Resize popup as images are being loaded.\r\n\t *\r\n\t * @default true\r\n\t * @since 4.9.17\r\n\t * @param Resize dynamically?\r\n\t */\r\n\tpublic set dynamicResize(value: boolean) {\r\n\t\tif (this._dynamicResize != value) {\r\n\t\t\tthis._dynamicResize = value;\r\n\t\t\tthis.positionElement(true);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Resize dynamically?\r\n\t */\r\n\tpublic get dynamicResize(): boolean {\r\n\t\treturn this.adapter.apply(\"dynamicResize\", this._dynamicResize);\r\n\t}\r\n\r\n\t/**\r\n\t * Horizontal positioning of the content window.\r\n\t *\r\n\t * Available options: \"left\", \"center\" (default), \"right\", and \"none\".\r\n\t *\r\n\t * @default \"center\"\r\n\t * @param Horizontal position\r\n\t */\r\n\tpublic set align(value: Align) {\r\n\t\tif (this._align != value) {\r\n\t\t\tthis._align = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Horizontal position\r\n\t */\r\n\tpublic get align(): Align {\r\n\t\treturn this.adapter.apply(\"align\", this._align);\r\n\t}\r\n\r\n\t/**\r\n\t * Vertical positioning of the content window.\r\n\t *\r\n\t * Available options: \"top\", \"middle\" (default), \"bottom\", and \"none\".\r\n\t *\r\n\t * @default \"middle\"\r\n\t * @param Vertical position\r\n\t */\r\n\tpublic set verticalAlign(value: VerticalAlign) {\r\n\t\tif (this._verticalAlign != value) {\r\n\t\t\tthis._verticalAlign = value;\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Vertical position\r\n\t */\r\n\tpublic get verticalAlign(): VerticalAlign {\r\n\t\treturn this.adapter.apply(\"verticalAlign\", this._verticalAlign);\r\n\t}\r\n\r\n\t/**\r\n\t * \"left\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Left\r\n\t */\r\n\tpublic set left(value: number | Percent) {\r\n\t\tif (this.left != value) {\r\n\t\t\tthis._left = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Left\r\n\t */\r\n\tpublic get left(): number | Percent {\r\n\t\treturn this.adapter.apply(\"left\", this._left);\r\n\t}\r\n\r\n\t/**\r\n\t * \"right\" coordinate of a non-aligned (`align = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `align` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Right\r\n\t */\r\n\tpublic set right(value: number | Percent) {\r\n\t\tif (this.right != value) {\r\n\t\t\tthis._right = value;\r\n\t\t\tthis._align = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Right\r\n\t */\r\n\tpublic get right(): number | Percent {\r\n\t\treturn this.adapter.apply(\"right\", this._right);\r\n\t}\r\n\r\n\t/**\r\n\t * \"top\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Top\r\n\t */\r\n\tpublic set top(value: number | Percent) {\r\n\t\tif (this.top != value) {\r\n\t\t\tthis._top = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Top\r\n\t */\r\n\tpublic get top(): number | Percent {\r\n\t\treturn this.adapter.apply(\"top\", this._top);\r\n\t}\r\n\r\n\t/**\r\n\t * \"bottom\" coordinate of a non-aligned (`verticalAlign = \"none\"`) popup.\r\n\t *\r\n\t * Can be either absolute pixel value, or relative (`Percent`).\r\n\t *\r\n\t * Setting this property will automatically set `verticalAlign` to \"none\".\r\n\t *\r\n\t * NOTE: The position is relative to the chart container.\r\n\t *\r\n\t * @param Bottom\r\n\t */\r\n\tpublic set bottom(value: number | Percent) {\r\n\t\tif (this.bottom != value) {\r\n\t\t\tthis._bottom = value;\r\n\t\t\tthis._verticalAlign = \"none\";\r\n\t\t\tthis.positionElement();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Bottom\r\n\t */\r\n\tpublic get bottom(): number | Percent {\r\n\t\treturn this.adapter.apply(\"bottom\", this._bottom);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object with references to various elements of the Popup.\r\n\t *\r\n\t * * `wrapper`\r\n\t * * `title`\r\n\t * * `content`\r\n\t * * `close`\r\n\t * * `curtain`\r\n\t */\r\n\tpublic get elements(): {\r\n\t\twrapper?: HTMLElement;\r\n\t\ttitle?: HTMLElement;\r\n\t\tcontent?: HTMLElement;\r\n\t\tclose?: HTMLElement;\r\n\t\tcurtain?: HTMLElement;\r\n\t} {\r\n\t\treturn this._elements;\r\n\t}\r\n\r\n\t/**\r\n\t * Loads popup CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tif (!this._cssLoaded) {\r\n\t\t\tthis._disposers.push(popupCSS(getShadowRoot(this.container), this.classPrefix));\r\n\t\t\t$object.each(this._elements, (key, el) => {\r\n\t\t\t\tel.style.display = \"\";\r\n\t\t\t});\r\n\t\t\tthis._cssLoaded = true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * If popup is closable, this method adds various events to popup elements.\r\n\t */\r\n\tprotected applyEvents(): void {\r\n\t\tif (this._IOs.close) {\r\n\t\t\tif (this.closable) {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"visible\";\r\n\r\n\t\t\t\tlet disposers = [\r\n\t\t\t\t\tgetInteraction().body.events.on(\"keyup\", (ev) => {\r\n\t\t\t\t\t\tif (keyboard.isKey(ev.event, \"esc\") && this.closable) {\r\n\t\t\t\t\t\t\tthis.close()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}),\r\n\t\t\t\t\tthis._IOs.close.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t})\r\n\t\t\t\t];\r\n\t\t\t\tdisposers.push(this._IOs.curtain.events.on(\"hit\", (ev) => {\r\n\t\t\t\t\tif (this.showCurtain && this.closable) {\r\n\t\t\t\t\t\tthis.close();\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t\tthis._disposers.push(new MultiDisposer(disposers));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._IOs.close.element.style.visibility = \"hidden\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables interactivity on parent chart.\r\n\t */\r\n\tprotected disablePointers(): void {\r\n\t\tif (this.sprite) {\r\n\t\t\tthis._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n\t\t\tthis.sprite.interactionsEnabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Releases temporarily disabled pointers on parent chart.\r\n\t */\r\n\tprotected releasePointers(): void {\r\n\t\tif ($type.hasValue(this._spriteInteractionsEnabled)) {\r\n\t\t\tthis.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n\t\t\tthis._spriteInteractionsEnabled = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets screen reader related settings.\r\n\t */\r\n\tprotected applyReaderSettings(): void {\r\n\t\tthis.elements.wrapper.setAttribute(\"aria-label\", this.readerTitle);\r\n\t}\r\n\r\n\t/**\r\n\t * Copies all properties and related data from different element.\r\n\t *\r\n\t * @param object Source element\r\n\t */\r\n\tpublic copyFrom(source: this): void {\r\n\t\tsuper.copyFrom(source);\r\n\t\tthis.container = source.container;\r\n\t\tthis.sprite = source.sprite;\r\n\t\tthis.classPrefix = source.classPrefixRaw;\r\n\t\tthis.content = source.content;\r\n\t\tthis.title = source.title;\r\n\t\tthis.readerTitle = source.readerTitle;\r\n\t\tthis.defaultStyles = source.defaultStyles;\r\n\t\tthis.showCurtain = source.showCurtain;\r\n\t\tthis.align = source.align;\r\n\t\tthis.verticalAlign = source.verticalAlign;\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.adapter.copyFrom(source.adapter);\r\n\t}\r\n\r\n}\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}