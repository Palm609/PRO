{"ast":null,"code":"/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { AxisBreak } from \"./AxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\n\nvar CategoryAxisBreak =\n/** @class */\nfunction (_super) {\n  __extends(CategoryAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CategoryAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CategoryAxisBreak\";\n    _this.properties.startLocation = 0.5;\n    _this.properties.endLocation = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startPosition\", {\n    /**\r\n     * Pixel position of the break's start.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function () {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endPosition\", {\n    /**\r\n     * Pixel position of the break's end.\r\n     *\r\n     * @return Position (px)\r\n     * @readonly\r\n     */\n    get: function () {\n      if (this.axis) {\n        return this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startCategory\", {\n    /**\r\n     * @return Start category\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startCategory\");\n    },\n\n    /**\r\n     * A category break starts on.\r\n     *\r\n     * @param value Start category\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endCategory\", {\n    /**\r\n     * @return End category\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endCategory\");\n    },\n\n    /**\r\n     * A category break ends on.\r\n     *\r\n     * @param value  End category\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endCategory\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      var category = this.getPropertyValue(\"startCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"startValue\");\n      }\n    },\n\n    /**\r\n     * An index of start category.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      var category = this.getPropertyValue(\"endCategory\");\n\n      if (category) {\n        return this.axis.categoryToIndex(category);\n      } else {\n        return this.getPropertyValue(\"endValue\");\n      }\n    },\n\n    /**\r\n     * An index of end category or a end value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endValue\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"startLocation\", {\n    /**\r\n     * @return Break start location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startLocation\");\n    },\n\n    /**\r\n     * Indicates where within starting category break should begin.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break start location\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CategoryAxisBreak.prototype, \"endLocation\", {\n    /**\r\n     * @return Break end location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endLocation\");\n    },\n\n    /**\r\n     * Indicates where within ending category break should end.\r\n     *\r\n     * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n     *\r\n     * E.g. if you want to a break to fully encompass start and end categories,\r\n     * you should set `startLocation = 0` and `endLocation = 1`.\r\n     *\r\n     * @since 4.9.17\r\n     * @default 0.5\r\n     * @param  value  Break end location\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CategoryAxisBreak;\n}(AxisBreak);\n\nexport { CategoryAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;","map":{"version":3,"sources":["../../../../../src/.internal/charts/axes/CategoryAxisBreak.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * A module which defines functionality related to Category Axis Break.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { AxisBreak, IAxisBreakProperties, IAxisBreakAdapters, IAxisBreakEvents } from \"./AxisBreak\";\r\nimport { CategoryAxis } from \"./CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakProperties extends IAxisBreakProperties {\r\n\r\n\t/**\r\n\t * Category break starts on.\r\n\t */\r\n\tstartCategory?: string;\r\n\r\n\t/**\r\n\t * Category break ends on.\r\n\t */\r\n\tendCategory?: string;\r\n\r\n\t/**\r\n\t * Location where break starts within cell (0-1).\r\n\t */\r\n\tstartLocation?: number;\r\n\r\n\t/**\r\n\t * Location where break ends within cell (0-1).\r\n\t */\r\n\tendLocation?: number;\r\n}\r\n\r\n/**\r\n * Defines events for [[CategoryAxisBreak]].\r\n */\r\nexport interface ICategoryAxisBreakEvents extends IAxisBreakEvents { }\r\n\r\n/**\r\n * Defines adapters for [[CategoryAxisBreak]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface ICategoryAxisBreakAdapters extends IAxisBreakAdapters, ICategoryAxisBreakProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Base class to define \"breaks\" in axes\r\n * @see {@link ICategoryAxisBreakEvents} for a list of available events\r\n * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters\r\n */\r\nexport class CategoryAxisBreak extends AxisBreak {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: ICategoryAxisBreakProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: ICategoryAxisBreakAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: ICategoryAxisBreakEvents;\r\n\r\n\t/**\r\n\t * Defines the type of the Axis this break is used for.\r\n\t */\r\n\tpublic _axisType: CategoryAxis;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"CategoryAxisBreak\";\r\n\t\tthis.properties.startLocation = 0.5;\r\n\t\tthis.properties.endLocation = 0.5;\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's start.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get startPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Pixel position of the break's end.\r\n\t *\r\n\t * @return Position (px)\r\n\t * @readonly\r\n\t */\r\n\tpublic get endPosition(): number {\r\n\t\tif (this.axis) {\r\n\t\t\treturn this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A category break starts on.\r\n\t *\r\n\t * @param value Start category\r\n\t */\r\n\tpublic set startCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"startCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Start category\r\n\t */\r\n\tpublic get startCategory(): string {\r\n\t\treturn this.getPropertyValue(\"startCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * A category break ends on.\r\n\t *\r\n\t * @param value  End category\r\n\t */\r\n\tpublic set endCategory(value: string) {\r\n\t\tif (this.setPropertyValue(\"endCategory\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return End category\r\n\t */\r\n\tpublic get endCategory(): string {\r\n\t\treturn this.getPropertyValue(\"endCategory\");\r\n\t}\r\n\r\n\t/**\r\n\t * An index of start category.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set startValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"startValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get startValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"startCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"startValue\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * An index of end category or a end value.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set endValue(value: number) {\r\n\t\tif (this.setPropertyValue(\"endValue\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get endValue(): number {\r\n\t\tlet category: string = this.getPropertyValue(\"endCategory\");\r\n\t\tif (category) {\r\n\t\t\treturn this.axis.categoryToIndex(category);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.getPropertyValue(\"endValue\");\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within starting category break should begin.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break start location\r\n\t */\r\n\tpublic set startLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"startLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break start location\r\n\t */\r\n\tpublic get startLocation(): number {\r\n\t\treturn this.getPropertyValue(\"startLocation\");\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates where within ending category break should end.\r\n\t *\r\n\t * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).\r\n\t *\r\n\t * E.g. if you want to a break to fully encompass start and end categories,\r\n\t * you should set `startLocation = 0` and `endLocation = 1`.\r\n\t *\r\n\t * @since 4.9.17\r\n\t * @default 0.5\r\n\t * @param  value  Break end location\r\n\t */\r\n\tpublic set endLocation(value: number) {\r\n\t\tif (this.setPropertyValue(\"endLocation\", value)) {\r\n\t\t\tif (this.axis) {\r\n\t\t\t\tthis.axis.invalidateDataItems();\r\n\t\t\t\tthis.axis.invalidateSeries();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Break end location\r\n\t */\r\n\tpublic get endLocation(): number {\r\n\t\treturn this.getPropertyValue(\"endLocation\");\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CategoryAxisBreak\"] = CategoryAxisBreak;\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}