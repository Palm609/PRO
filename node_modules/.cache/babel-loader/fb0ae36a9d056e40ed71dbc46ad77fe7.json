{"ast":null,"code":"import * as $array from \"./Array\";\nimport * as $log from \"./Log\";\n\nvar Native =\n/** @class */\nfunction () {\n  function Native() {\n    var _this = this;\n\n    this._targets = [];\n    this._observer = new ResizeObserver(function (entries) {\n      $array.each(entries, function (entry) {\n        $array.each(_this._targets, function (x) {\n          if (x.target === entry.target) {\n            x.callback();\n          }\n        });\n      });\n    });\n  }\n\n  Native.prototype.addTarget = function (target, callback) {\n    this._observer.observe(target, {\n      box: \"content-box\"\n    });\n\n    this._targets.push({\n      target: target,\n      callback: callback\n    });\n  };\n\n  Native.prototype.removeTarget = function (target) {\n    this._observer.unobserve(target);\n\n    $array.keepIf(this._targets, function (x) {\n      return x.target !== target;\n    });\n  };\n\n  return Native;\n}();\n\nvar Raf =\n/** @class */\nfunction () {\n  function Raf() {\n    this._targets = [];\n  }\n\n  Raf.prototype.addTarget = function (target, callback) {\n    var _this = this;\n\n    if (this._targets.length === 0) {\n      var lastTime_1 = null;\n\n      var loop_1 = function () {\n        var currentTime = Date.now();\n\n        if (lastTime_1 === null || currentTime > lastTime_1 + Raf.delay) {\n          lastTime_1 = currentTime;\n          $array.each(_this._targets, function (x) {\n            var newSize = x.target.getBoundingClientRect();\n\n            if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n              x.size = newSize;\n              x.callback();\n            }\n          });\n        }\n\n        _this._timer = requestAnimationFrame(loop_1);\n      };\n\n      this._timer = requestAnimationFrame(loop_1);\n    }\n\n    var size = target.getBoundingClientRect();\n\n    this._targets.push({\n      target: target,\n      callback: callback,\n      size: size\n    });\n  };\n\n  Raf.prototype.removeTarget = function (target) {\n    $array.keepIf(this._targets, function (x) {\n      return x.target !== target;\n    });\n\n    if (this._targets.length === 0) {\n      cancelAnimationFrame(this._timer);\n    }\n  };\n\n  Raf.delay = 200;\n  return Raf;\n}();\n\nvar observer = null;\n\nfunction makeSensor() {\n  if (observer === null) {\n    if (typeof ResizeObserver !== \"undefined\") {\n      observer = new Native();\n    } else {\n      observer = new Raf();\n    }\n  }\n\n  return observer;\n}\n\nvar ResizeSensor =\n/** @class */\nfunction () {\n  function ResizeSensor(element, callback) {\n    this._disposed = false;\n    this._sensor = makeSensor();\n    this._element = element;\n\n    this._sensor.addTarget(element, callback);\n  }\n\n  ResizeSensor.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ResizeSensor.prototype.dispose = function () {\n    if (!this._disposed) {\n      this._disposed = true;\n\n      this._sensor.removeTarget(this._element);\n    }\n  };\n\n  Object.defineProperty(ResizeSensor.prototype, \"sensor\", {\n    get: function () {\n      return this._sensor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Deprecated: do not use.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  ResizeSensor.prototype.reset = function () {\n    $log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\n  };\n\n  return ResizeSensor;\n}();\n\nexport { ResizeSensor };","map":{"version":3,"sources":["../../../../../src/.internal/core/utils/ResizeSensor.ts"],"names":[],"mappings":"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","sourcesContent":["import * as $array from \"./Array\";\nimport * as $log from \"./Log\";\n\n\ninterface Sensor {\n\taddTarget(target: Element, callback: () => void): void;\n\tremoveTarget(target: Element): void;\n}\n\n\ndeclare const ResizeObserver: any;\n\nclass Native implements Sensor {\n\tprivate _observer: any;\n\tprivate _targets: Array<{ target: Element, callback: () => void }> = [];\n\n\tconstructor() {\n\t\tthis._observer = new ResizeObserver((entries: Array<any>) => {\n\t\t\t$array.each(entries, (entry) => {\n\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\tif (x.target === entry.target) {\n\t\t\t\t\t\tx.callback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tthis._observer.observe(target, { box: \"content-box\" });\n\t\tthis._targets.push({ target, callback });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\tthis._observer.unobserve(target);\n\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\t}\n}\n\n\nclass Raf implements Sensor {\n\tpublic static delay: number = 200;\n\n\tprivate _timer: number | undefined;\n\tprivate _targets: Array<{ target: Element, callback: () => void, size: ClientRect | DOMRect }> = [];\n\n\taddTarget(target: Element, callback: () => void) {\n\t\tif (this._targets.length === 0) {\n\t\t\tlet lastTime: number | null = null;\n\n\t\t\tconst loop = () => {\n\t\t\t\tconst currentTime = Date.now();\n\n\t\t\t\tif (lastTime === null || currentTime > (lastTime + Raf.delay)) {\n\t\t\t\t\tlastTime = currentTime;\n\n\t\t\t\t\t$array.each(this._targets, (x) => {\n\t\t\t\t\t\tlet newSize = x.target.getBoundingClientRect();\n\n\t\t\t\t\t\tif (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n\t\t\t\t\t\t\tx.size = newSize;\n\t\t\t\t\t\t\tx.callback();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t\t};\n\n\t\t\tthis._timer = requestAnimationFrame(loop);\n\t\t}\n\n\t\tlet size = target.getBoundingClientRect();\n\t\tthis._targets.push({ target, callback, size });\n\t}\n\n\tremoveTarget(target: Element) {\n\t\t$array.keepIf(this._targets, (x) => {\n\t\t\treturn x.target !== target;\n\t\t});\n\n\t\tif (this._targets.length === 0) {\n\t\t\tcancelAnimationFrame(this._timer);\n\t\t}\n\t}\n}\n\n\nlet observer: Sensor | null = null;\n\nfunction makeSensor(): Sensor {\n\tif (observer === null) {\n\t\tif (typeof ResizeObserver !== \"undefined\") {\n\t\t\tobserver = new Native();\n\n\t\t} else {\n\t\t\tobserver = new Raf();\n\t\t}\n\t}\n\n\treturn observer;\n}\n\nexport class ResizeSensor {\n\tprivate _sensor: Sensor;\n\tprivate _element: Element;\n\tprivate _disposed: boolean = false;\n\n\tconstructor(element: Element, callback: () => void) {\n\t\tthis._sensor = makeSensor();\n\t\tthis._element = element;\n\t\tthis._sensor.addTarget(element, callback);\n\t}\n\n\tpublic isDisposed() {\n\t\treturn this._disposed;\n\t}\n\n\tpublic dispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._sensor.removeTarget(this._element);\n\t\t}\n\t}\n\n\tpublic get sensor(): Sensor {\n\t\treturn this._sensor;\n\t}\n\n\t/**\n\t * Deprecated: do not use.\n\t *\n\t * @ignore Exclude from docs\n\t */\n\tpublic reset() {\n\t\t$log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\n\t}\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}