{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\never\\\\OneDrive\\\\\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B\\\\Numerproject-main\\\\src\\\\Interpolation\\\\Newton.js\";\nimport React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Button, Table } from 'antd';\nimport Desmos from 'desmos';\nimport { addStyles, EditableMathField } from 'react-mathquill';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AlgebraLatex = require('algebra-latex');\n\nconst math = require('mathjs');\n\naddStyles();\nvar dataInTable = [];\nvar columns2 = [{\n  title: 'Ans',\n  dataIndex: 'Ans',\n  key: 'Ans'\n}];\nvar columns1 = [{\n  title: 'No.',\n  dataIndex: 'no',\n  key: 'no'\n}, {\n  title: 'X',\n  dataIndex: 'x',\n  key: 'x'\n}, {\n  title: 'Y',\n  dataIndex: 'y',\n  key: 'y'\n}];\nvar x = [],\n    y = [],\n    tableTag = [],\n    interpolatePoint = [],\n    tempTag = [],\n    fx;\nexport default class Test extends Component {\n  constructor(props) {\n    super(props);\n    this.bi = this.bi.bind(this);\n    this.Ex = this.Ex.bind(this);\n    this.state = {\n      nPoints: null,\n      ans: [],\n      X: null,\n      interpolatePoint: null,\n      showTableInput: false,\n      showTableInpu2: false\n    };\n    this.elt = {};\n    this.calculator = {};\n  } //API\n\n\n  async Ex() {\n    // const url = \"https://api.randomuser.me/\";\n    const url = 'http://localhost:8000/data/nd'; // const url = \"http://localhost:8000/Newton\";\n    // const url = \"http://127.0.0.1/Json/item.json\";\n\n    const response = await fetch(url);\n    console.log(response);\n    const data = await response.json();\n    console.log(data);\n    this.setState({\n      nPoints: data.col,\n      X: data.Newton.X,\n      interpolatePoint: data.Newton.interpolatePoint\n    });\n    console.log('nPoints', this.state.nPoints);\n    this.createTableInput(parseInt(this.state.nPoints));\n\n    for (var i = 0; i < this.state.nPoints; i++) {\n      document.getElementById('x' + (i + 1)).value = data.Newton.x[i];\n      document.getElementById('y' + (i + 1)).value = data.Newton.y[i];\n    }\n\n    this.createInterpolatePointInput();\n\n    for (var i = 0; i < this.state.interpolatePoint; i++) {\n      document.getElementById('p' + (i + 1)).value = data.Newton.p[i];\n    }\n\n    this.forceUpdate();\n  }\n\n  componentDidMount() {//ทำอัตโนมัติหลังจาก render เสร็จ\n  }\n\n  componentDidUpdate() {}\n\n  initialValue() {\n    x = [];\n    y = [];\n\n    for (var i = 1; i <= this.state.nPoints; i++) {\n      x[i] = parseFloat(document.getElementById('x' + i).value);\n      y[i] = parseFloat(document.getElementById('y' + i).value);\n    }\n\n    for (i = 1; i <= this.state.interpolatePoint; i++) {\n      interpolatePoint[i] = parseInt(document.getElementById('p' + i).value);\n    }\n\n    console.log('initialValue');\n  }\n\n  C(n) {\n    console.log('C', n);\n\n    if (n === 1) {\n      return 0;\n    } else {\n      return (y[interpolatePoint[n]] - y[interpolatePoint[n - 1]]) / (x[interpolatePoint[n]] - x[interpolatePoint[n - 1]]) - this.C(n - 1);\n    }\n  }\n\n  findX(n, X) {\n    if (n < 1) {\n      return 1;\n    } else {\n      console.log(X + ' - ' + x[interpolatePoint[n]]);\n      return (X - x[interpolatePoint[n]]) * this.findX(n - 1, X);\n    }\n  }\n\n  newton_difference(n, X) {\n    this.initialValue();\n    fx = y[1];\n\n    if (n === 2) {\n      //if linear interpolate\n      fx += (y[interpolatePoint[2]] - y[interpolatePoint[1]]) / (x[interpolatePoint[2]] - x[interpolatePoint[1]]) * (X - x[interpolatePoint[1]]);\n    } else {\n      for (var i = 2; i <= n; i++) {\n        fx += this.C(i) / (x[interpolatePoint[i]] - x[interpolatePoint[1]]) * this.findX(i - 1, X);\n      }\n    }\n\n    this.setState({\n      showOutputCard: true\n    });\n  }\n\n  bi() {\n    this.newton_difference(parseInt(this.state.interpolatePoint), parseFloat(this.state.X));\n    dataInTable = [];\n    dataInTable.push({\n      Ans: fx\n    });\n    console.log(fx);\n    console.log('end');\n  }\n\n  createInterpolatePointInput() {\n    tempTag = [];\n\n    for (var i = 1; i <= this.state.interpolatePoint; i++) {\n      tempTag.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '14%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'p' + i,\n        placeholder: 'p' + i\n      }, 'p' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this));\n    }\n\n    this.setState({\n      showTableInput2: true\n    });\n  }\n\n  createTableInput(n) {\n    x = [];\n    y = [];\n    tableTag = [];\n\n    for (var i = 1; i <= n; i++) {\n      x.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'x' + i,\n        placeholder: 'x' + i\n      }, 'x' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this));\n      y.push( /*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: '100%',\n          height: '50%',\n          backgroundColor: 'black',\n          marginInlineEnd: '5%',\n          marginBlockEnd: '5%',\n          color: 'white',\n          fontSize: '18px',\n          fontWeight: 'bold'\n        },\n        id: 'y' + i,\n        placeholder: 'y' + i\n      }, 'y' + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this));\n      tableTag.push({\n        no: i,\n        x: x[i - 1],\n        y: y[i - 1]\n      });\n    }\n\n    this.setState({\n      showTableInput: true\n    });\n    console.log(x, y, tableTag);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Newton Divided Difference\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  nPoints: e.target.value\n                });\n                this.createTableInput(parseInt(this.state.nPoints));\n                this.forceUpdate();\n              },\n              value: this.state.nPoints,\n              name: \"nPoints\",\n              placeholder: \"Number of points (n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: e => {\n                this.setState({\n                  X: e.target.value\n                });\n                this.forceUpdate();\n              },\n              value: this.state.X,\n              name: \"X\",\n              placeholder: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"interpolatePoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              onChange: async e => {\n                await this.setState({\n                  interpolatePoint: e.target.value\n                });\n                this.createInterpolatePointInput();\n                this.forceUpdate();\n              },\n              value: this.state.interpolatePoint,\n              name: \"interpolatePoint\",\n              placeholder: \"interpolatePoint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: this.bi,\n              type: \"primary\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: '73%',\n                backgroundColor: '#76D7C4',\n                borderColor: '#76D7C4'\n              },\n              onClick: this.Ex,\n              type: \"primary\",\n              children: \"Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: this.state.showTableInput && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              columns: columns1,\n              dataSource: tableTag,\n              pagination: false,\n              bordered: true,\n              bodyStyle: {\n                fontWeight: 'bold',\n                fontSize: '18px',\n                color: 'white',\n                overflowY: 'scroll',\n                minWidth: 120,\n                maxHeight: 300\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), this.state.showTableInput2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"interpolatePoint\", ' ', parseInt(this.state.interpolatePoint) === 2 ? '(Linear)' : parseInt(this.state.interpolatePoint) === 3 ? '(Quadratic)' : '(Polynomial)']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 25\n        }, this), tempTag]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: 'Output',\n        bordered: true,\n        style: {\n          width: '100%',\n          background: '#2196f3',\n          color: '#FFFFFFFF'\n        },\n        id: \"outputCard\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          pagination: {\n            defaultPageSize: 5\n          },\n          columns: columns2,\n          dataSource: dataInTable,\n          bordered: true,\n          bodyStyle: {\n            fontWeight: 'bold',\n            fontSize: '18px',\n            color: 'black'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"names":["React","Component","Card","Input","Button","Table","Desmos","addStyles","EditableMathField","AlgebraLatex","require","math","dataInTable","columns2","title","dataIndex","key","columns1","x","y","tableTag","interpolatePoint","tempTag","fx","Test","constructor","props","bi","bind","Ex","state","nPoints","ans","X","showTableInput","showTableInpu2","elt","calculator","url","response","fetch","console","log","data","json","setState","col","Newton","createTableInput","parseInt","i","document","getElementById","value","createInterpolatePointInput","p","forceUpdate","componentDidMount","componentDidUpdate","initialValue","parseFloat","C","n","findX","newton_difference","showOutputCard","push","Ans","width","height","backgroundColor","marginInlineEnd","marginBlockEnd","color","fontSize","fontWeight","showTableInput2","no","render","e","target","marginLeft","borderColor","overflowY","minWidth","maxHeight","background","defaultPageSize"],"sources":["C:/Users/never/OneDrive/เดสก์ท็อป/Numerproject-main/src/Interpolation/Newton.js"],"sourcesContent":["import React, { Component } from 'react'\nimport 'antd/dist/antd.css'\nimport { Card, Input, Button, Table } from 'antd'\nimport Desmos from 'desmos'\nimport { addStyles, EditableMathField } from 'react-mathquill'\nconst AlgebraLatex = require('algebra-latex')\nconst math = require('mathjs')\n\naddStyles()\n\nvar dataInTable = []\nvar columns2 = [\n    {\n        title: 'Ans',\n        dataIndex: 'Ans',\n        key: 'Ans',\n    },\n]\n\nvar columns1 = [\n    {\n        title: 'No.',\n        dataIndex: 'no',\n        key: 'no',\n    },\n    {\n        title: 'X',\n        dataIndex: 'x',\n        key: 'x',\n    },\n    {\n        title: 'Y',\n        dataIndex: 'y',\n        key: 'y',\n    },\n]\nvar x = [],\n    y = [],\n    tableTag = [],\n    interpolatePoint = [],\n    tempTag = [],\n    fx\n\nexport default class Test extends Component {\n    constructor(props) {\n        super(props)\n        this.bi = this.bi.bind(this)\n        this.Ex = this.Ex.bind(this)\n        this.state = {\n            nPoints: null,\n            ans: [],\n            X: null,\n            interpolatePoint: null,\n            showTableInput: false,\n            showTableInpu2: false,\n        }\n        this.elt = {}\n        this.calculator = {}\n    }\n    //API\n    async Ex() {\n        // const url = \"https://api.randomuser.me/\";\n        const url = 'http://localhost:8000/data/nd'\n        // const url = \"http://localhost:8000/Newton\";\n        // const url = \"http://127.0.0.1/Json/item.json\";\n        const response = await fetch(url)\n        console.log(response)\n        const data = await response.json()\n        console.log(data)\n        this.setState({\n            nPoints: data.col,\n            X: data.Newton.X,\n            interpolatePoint: data.Newton.interpolatePoint,\n        })\n        console.log('nPoints', this.state.nPoints)\n        this.createTableInput(parseInt(this.state.nPoints))\n\n        for (var i = 0; i < this.state.nPoints; i++) {\n            document.getElementById('x' + (i + 1)).value = \n            data.Newton.x[i]\n            document.getElementById('y' + (i + 1)).value = \n            data.Newton.y[i]\n        }\n\n        this.createInterpolatePointInput()\n        for (var i = 0; i < this.state.interpolatePoint; i++) {\n            document.getElementById('p' + (i + 1)).value = data.Newton.p[i]\n        }\n        this.forceUpdate()\n    }\n\n    componentDidMount() {\n        //ทำอัตโนมัติหลังจาก render เสร็จ\n    }\n    componentDidUpdate() {}\n\n    initialValue() {\n        x = []\n        y = []\n        for (var i = 1; i <= this.state.nPoints; i++) {\n            x[i] = parseFloat(document.getElementById('x' + i).value)\n            y[i] = parseFloat(document.getElementById('y' + i).value)\n        }\n        for (i = 1; i <= this.state.interpolatePoint; i++) {\n            interpolatePoint[i] = parseInt(\n                document.getElementById('p' + i).value\n            )\n        }\n        console.log('initialValue')\n    }\n\n    C(n) {\n        console.log('C', n)\n        if (n === 1) {\n            return 0\n        } else {\n            return (\n                (y[interpolatePoint[n]] - y[interpolatePoint[n - 1]]) /\n                    (x[interpolatePoint[n]] - x[interpolatePoint[n - 1]]) -\n                this.C(n - 1)\n            )\n        }\n    }\n    findX(n, X) {\n        if (n < 1) {\n            return 1\n        } else {\n            console.log(X + ' - ' + x[interpolatePoint[n]])\n            return (X - x[interpolatePoint[n]]) * this.findX(n - 1, X)\n        }\n    }\n\n    newton_difference(n, X) {\n        this.initialValue()\n        fx = y[1]\n        if (n === 2) {\n            //if linear interpolate\n            fx +=\n                ((y[interpolatePoint[2]] - y[interpolatePoint[1]]) /\n                    (x[interpolatePoint[2]] - x[interpolatePoint[1]])) *\n                (X - x[interpolatePoint[1]])\n        } else {\n            for (var i = 2; i <= n; i++) {\n                fx +=\n                    (this.C(i) /\n                        (x[interpolatePoint[i]] - x[interpolatePoint[1]])) *\n                    this.findX(i - 1, X)\n            }\n        }\n\n        this.setState({\n            showOutputCard: true,\n        })\n    }\n    bi() {\n        this.newton_difference(\n            parseInt(this.state.interpolatePoint),\n            parseFloat(this.state.X)\n        )\n        dataInTable = []\n        dataInTable.push({\n            Ans: fx,\n        })\n\n        console.log(fx)\n        console.log('end')\n    }\n\n    createInterpolatePointInput() {\n        tempTag = []\n        for (var i = 1; i <= this.state.interpolatePoint; i++) {\n            tempTag.push(\n                <Input\n                    style={{\n                        width: '14%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'p' + i}\n                    key={'p' + i}\n                    placeholder={'p' + i}\n                />\n            )\n        }\n        this.setState({\n            showTableInput2: true,\n        })\n    }\n\n    createTableInput(n) {\n        x = []\n        y = []\n        tableTag = []\n        for (var i = 1; i <= n; i++) {\n            x.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'x' + i}\n                    key={'x' + i}\n                    placeholder={'x' + i}\n                />\n            )\n            y.push(\n                <Input\n                    style={{\n                        width: '100%',\n                        height: '50%',\n                        backgroundColor: 'black',\n                        marginInlineEnd: '5%',\n                        marginBlockEnd: '5%',\n                        color: 'white',\n                        fontSize: '18px',\n                        fontWeight: 'bold',\n                    }}\n                    id={'y' + i}\n                    key={'y' + i}\n                    placeholder={'y' + i}\n                />\n            )\n            tableTag.push({\n                no: i,\n                x: x[i - 1],\n                y: y[i - 1],\n            })\n        }\n\n        this.setState({\n            showTableInput: true,\n        })\n        console.log(x, y, tableTag)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Newton Divided Difference</h1>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div>\n                            <p>Number of points (n)</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        nPoints: e.target.value,\n                                    })\n                                    this.createTableInput(\n                                        parseInt(this.state.nPoints)\n                                    )\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.nPoints}\n                                name=\"nPoints\"\n                                placeholder=\"Number of points (n)\"\n                            />\n                            <p>X</p>\n                            <Input\n                                onChange={(e) => {\n                                    this.setState({ X: e.target.value })\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.X}\n                                name=\"X\"\n                                placeholder=\"X\"\n                            />\n                            <p>interpolatePoint</p>\n                            <Input\n                                onChange={async (e) => {\n                                    await this.setState({\n                                        interpolatePoint: e.target.value,\n                                    })\n                                    this.createInterpolatePointInput()\n                                    this.forceUpdate()\n                                }}\n                                value={this.state.interpolatePoint}\n                                name=\"interpolatePoint\"\n                                placeholder=\"interpolatePoint\"\n                            />\n                            <br></br>\n                            <br></br>\n                            <Button onClick={this.bi} type=\"primary\">\n                                Submit\n                            </Button>\n                            <Button\n                                style={{\n                                    marginLeft: '73%',\n                                    backgroundColor: '#76D7C4',\n                                    borderColor: '#76D7C4',\n                                }}\n                                onClick={this.Ex}\n                                type=\"primary\"\n                            >\n                                Example\n                            </Button>\n                        </div>\n                        <br></br>\n                    </div>\n                    <div className=\"col\">\n                        {this.state.showTableInput && (\n                            <div>\n                                <Table\n                                    columns={columns1}\n                                    dataSource={tableTag}\n                                    pagination={false}\n                                    bordered={true}\n                                    bodyStyle={{\n                                        fontWeight: 'bold',\n                                        fontSize: '18px',\n                                        color: 'white',\n                                        overflowY: 'scroll',\n                                        minWidth: 120,\n                                        maxHeight: 300,\n                                    }}\n                                ></Table>\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {this.state.showTableInput2 && (\n                    <div>\n                        <h2>\n                            interpolatePoint{' '}\n                            {parseInt(this.state.interpolatePoint) === 2\n                                ? '(Linear)'\n                                : parseInt(this.state.interpolatePoint) === 3\n                                ? '(Quadratic)'\n                                : '(Polynomial)'}\n                        </h2>\n                        {tempTag}\n                    </div>\n                )}\n\n                <Card\n                    title={'Output'}\n                    bordered={true}\n                    style={{\n                        width: '100%',\n                        background: '#2196f3',\n                        color: '#FFFFFFFF',\n                    }}\n                    id=\"outputCard\"\n                >\n                    <Table\n                        pagination={{ defaultPageSize: 5 }}\n                        columns={columns2}\n                        dataSource={dataInTable}\n                        \n                        bordered={true}\n                        bodyStyle={{\n                            fontWeight: 'bold',\n                            fontSize: '18px',\n                            color: 'black',\n                        }}\n                    ></Table>\n                </Card>\n            </div>\n        )\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}