{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _Lexer2 = require('./Lexer');\n\nvar _Lexer3 = _interopRequireDefault(_Lexer2);\n\nvar _greekLetters = require('../models/greek-letters');\n\nvar _greekLetters2 = _interopRequireDefault(_greekLetters);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar LatexLexer = function (_Lexer) {\n  _inherits(LatexLexer, _Lexer);\n\n  function LatexLexer(latex) {\n    _classCallCheck(this, LatexLexer);\n\n    return _possibleConstructorReturn(this, (LatexLexer.__proto__ || Object.getPrototypeOf(LatexLexer)).call(this, latex));\n  }\n\n  _createClass(LatexLexer, [{\n    key: 'next_token',\n    value: function next_token() {\n      this.prev_col = this.col;\n      this.prev_line = this.line;\n\n      if (this.pos >= this.text.length) {\n        return {\n          type: 'EOF'\n        };\n      }\n\n      if (this.current_char() == '\\n') {\n        this.col = 0;\n        this.line++;\n      }\n\n      var blank_chars = [' ', '\\n', '\\\\ ', '\\\\!', '&', '\\\\,', '\\\\:', '\\\\;', '\\\\quad', '\\\\qquad'];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = blank_chars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var blank = _step.value;\n\n          if (this.text.startsWith(blank, this.pos)) {\n            this.increment(blank.length);\n            return this.next_token();\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this.current_char() == '\\\\') {\n        return this.keyword();\n      }\n\n      if (this.current_char().match(/[0-9]/)) {\n        return this.number();\n      }\n\n      if (this.current_char().match(/[a-zA-Z]/)) {\n        return this.variable();\n      }\n\n      if (this.current_char() == '{') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: true,\n          value: '{'\n        };\n      }\n\n      if (this.current_char() == '}') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: false,\n          value: '}'\n        };\n      }\n\n      if (this.current_char() == '(') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: true,\n          value: '('\n        };\n      }\n\n      if (this.current_char() == ')') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: false,\n          value: ')'\n        };\n      }\n\n      if (this.current_char() == '[') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: true,\n          value: '['\n        };\n      }\n\n      if (this.current_char() == ']') {\n        this.increment();\n        return {\n          type: 'bracket',\n          open: false,\n          value: ']'\n        };\n      }\n\n      if (this.current_char() == '+') {\n        this.increment();\n        return {\n          type: 'operator',\n          value: 'plus'\n        };\n      }\n\n      if (this.current_char() == '-') {\n        this.increment();\n        return {\n          type: 'operator',\n          value: 'minus'\n        };\n      }\n\n      if (this.current_char() == '*') {\n        this.increment();\n        return {\n          type: 'operator',\n          value: 'multiply'\n        };\n      }\n\n      if (this.current_char() == '/') {\n        this.increment();\n        return {\n          type: 'operator',\n          value: 'divide'\n        };\n      }\n\n      if (this.current_char() == '^') {\n        this.increment();\n        return {\n          type: 'operator',\n          value: 'exponent'\n        };\n      }\n\n      if (this.current_char() == '=') {\n        this.increment();\n        return {\n          type: 'equal'\n        };\n      }\n\n      if (this.current_char() == '_') {\n        this.increment();\n        return {\n          type: 'underscore'\n        };\n      }\n\n      this.error('Unknown symbol: ' + this.current_char());\n    }\n  }, {\n    key: 'keyword',\n    value: function keyword() {\n      this.eat('\\\\');\n      var variable = this.variable();\n\n      if (variable.value == 'cdot') {\n        return {\n          type: 'operator',\n          value: 'multiply'\n        };\n      }\n\n      if (variable.value == 'mod') {\n        return {\n          type: 'operator',\n          value: 'modulus'\n        };\n      }\n\n      if (variable.value == 'left') {\n        var bracket = this.next_token();\n\n        if (bracket.type != 'bracket' && bracket.open != true) {\n          this.error('Expected opening bracket found ' + JSON.stringify(bracket));\n        }\n\n        return bracket;\n      }\n\n      if (variable.value == 'right') {\n        var _bracket = this.next_token();\n\n        if (_bracket.type != 'bracket' && _bracket.open != false) {\n          this.error('Expected closing bracket found ' + JSON.stringify(_bracket));\n        }\n\n        return _bracket;\n      }\n\n      if (_greekLetters2.default.map(function (x) {\n        return x.name;\n      }).includes(variable.value.toLowerCase())) {\n        return {\n          type: 'variable',\n          value: variable.value\n        };\n      }\n\n      return {\n        type: 'keyword',\n        value: variable.value\n      };\n    }\n  }, {\n    key: 'variable',\n    value: function variable() {\n      var token = '';\n\n      while (this.current_char().match(/[a-zA-Z]/) && this.pos <= this.text.length) {\n        token += this.current_char();\n        this.increment();\n      }\n\n      return {\n        type: 'variable',\n        value: token\n      };\n    }\n  }]);\n\n  return LatexLexer;\n}(_Lexer3.default);\n\nexports.default = LatexLexer;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_Lexer2","require","_Lexer3","_interopRequireDefault","_greekLetters","_greekLetters2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","LatexLexer","_Lexer","latex","getPrototypeOf","next_token","prev_col","col","prev_line","line","pos","text","type","current_char","blank_chars","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Symbol","iterator","_step","next","done","blank","startsWith","increment","err","return","keyword","match","number","variable","open","error","eat","bracket","JSON","stringify","_bracket","map","x","name","includes","toLowerCase","token"],"sources":["C:/Users/never/OneDrive/เดสก์ท็อป/Numerproject-main/node_modules/algebra-latex/lib/lexers/LexerLatex.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Lexer2 = require('./Lexer');\n\nvar _Lexer3 = _interopRequireDefault(_Lexer2);\n\nvar _greekLetters = require('../models/greek-letters');\n\nvar _greekLetters2 = _interopRequireDefault(_greekLetters);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LatexLexer = function (_Lexer) {\n  _inherits(LatexLexer, _Lexer);\n\n  function LatexLexer(latex) {\n    _classCallCheck(this, LatexLexer);\n\n    return _possibleConstructorReturn(this, (LatexLexer.__proto__ || Object.getPrototypeOf(LatexLexer)).call(this, latex));\n  }\n\n  _createClass(LatexLexer, [{\n    key: 'next_token',\n    value: function next_token() {\n      this.prev_col = this.col;\n      this.prev_line = this.line;\n\n      if (this.pos >= this.text.length) {\n        return { type: 'EOF' };\n      }\n\n      if (this.current_char() == '\\n') {\n        this.col = 0;\n        this.line++;\n      }\n\n      var blank_chars = [' ', '\\n', '\\\\ ', '\\\\!', '&', '\\\\,', '\\\\:', '\\\\;', '\\\\quad', '\\\\qquad'];\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = blank_chars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var blank = _step.value;\n\n          if (this.text.startsWith(blank, this.pos)) {\n            this.increment(blank.length);\n            return this.next_token();\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (this.current_char() == '\\\\') {\n        return this.keyword();\n      }\n\n      if (this.current_char().match(/[0-9]/)) {\n        return this.number();\n      }\n\n      if (this.current_char().match(/[a-zA-Z]/)) {\n        return this.variable();\n      }\n\n      if (this.current_char() == '{') {\n        this.increment();\n        return { type: 'bracket', open: true, value: '{' };\n      }\n\n      if (this.current_char() == '}') {\n        this.increment();\n        return { type: 'bracket', open: false, value: '}' };\n      }\n\n      if (this.current_char() == '(') {\n        this.increment();\n        return { type: 'bracket', open: true, value: '(' };\n      }\n\n      if (this.current_char() == ')') {\n        this.increment();\n        return { type: 'bracket', open: false, value: ')' };\n      }\n\n      if (this.current_char() == '[') {\n        this.increment();\n        return { type: 'bracket', open: true, value: '[' };\n      }\n\n      if (this.current_char() == ']') {\n        this.increment();\n        return { type: 'bracket', open: false, value: ']' };\n      }\n\n      if (this.current_char() == '+') {\n        this.increment();\n        return { type: 'operator', value: 'plus' };\n      }\n\n      if (this.current_char() == '-') {\n        this.increment();\n        return { type: 'operator', value: 'minus' };\n      }\n\n      if (this.current_char() == '*') {\n        this.increment();\n        return { type: 'operator', value: 'multiply' };\n      }\n\n      if (this.current_char() == '/') {\n        this.increment();\n        return { type: 'operator', value: 'divide' };\n      }\n\n      if (this.current_char() == '^') {\n        this.increment();\n        return { type: 'operator', value: 'exponent' };\n      }\n\n      if (this.current_char() == '=') {\n        this.increment();\n        return { type: 'equal' };\n      }\n\n      if (this.current_char() == '_') {\n        this.increment();\n        return { type: 'underscore' };\n      }\n\n      this.error('Unknown symbol: ' + this.current_char());\n    }\n  }, {\n    key: 'keyword',\n    value: function keyword() {\n      this.eat('\\\\');\n\n      var variable = this.variable();\n\n      if (variable.value == 'cdot') {\n        return { type: 'operator', value: 'multiply' };\n      }\n\n      if (variable.value == 'mod') {\n        return { type: 'operator', value: 'modulus' };\n      }\n\n      if (variable.value == 'left') {\n        var bracket = this.next_token();\n\n        if (bracket.type != 'bracket' && bracket.open != true) {\n          this.error('Expected opening bracket found ' + JSON.stringify(bracket));\n        }\n\n        return bracket;\n      }\n\n      if (variable.value == 'right') {\n        var _bracket = this.next_token();\n\n        if (_bracket.type != 'bracket' && _bracket.open != false) {\n          this.error('Expected closing bracket found ' + JSON.stringify(_bracket));\n        }\n\n        return _bracket;\n      }\n\n      if (_greekLetters2.default.map(function (x) {\n        return x.name;\n      }).includes(variable.value.toLowerCase())) {\n        return { type: 'variable', value: variable.value };\n      }\n\n      return {\n        type: 'keyword',\n        value: variable.value\n      };\n    }\n  }, {\n    key: 'variable',\n    value: function variable() {\n      var token = '';\n      while (this.current_char().match(/[a-zA-Z]/) && this.pos <= this.text.length) {\n        token += this.current_char();\n        this.increment();\n      }\n\n      return {\n        type: 'variable',\n        value: token\n      };\n    }\n  }]);\n\n  return LatexLexer;\n}(_Lexer3.default);\n\nexports.default = LatexLexer;"],"mappings":"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"},"metadata":{},"sourceType":"script"}